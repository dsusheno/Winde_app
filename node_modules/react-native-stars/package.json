{
  "_args": [
    [
      {
        "raw": "react-native-stars@1.0.1",
        "scope": null,
        "escapedName": "react-native-stars",
        "name": "react-native-stars",
        "rawSpec": "1.0.1",
        "spec": "1.0.1",
        "type": "version"
      },
      "/Users/nex/Incubateur/winde_merge"
    ]
  ],
  "_from": "react-native-stars@1.0.1",
  "_id": "react-native-stars@1.0.1",
  "_inCache": true,
  "_location": "/react-native-stars",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-native-stars-1.0.1.tgz_1487047139641_0.46889446256682277"
  },
  "_npmUser": {
    "name": "extrct",
    "email": "austin.munro.montgomery@gmail.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-stars@1.0.1",
    "scope": null,
    "escapedName": "react-native-stars",
    "name": "react-native-stars",
    "rawSpec": "1.0.1",
    "spec": "1.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-stars/-/react-native-stars-1.0.1.tgz",
  "_shasum": "a7c90c61aab3bbf22433cbb1a3a3f5b3a72fe557",
  "_shrinkwrap": null,
  "_spec": "react-native-stars@1.0.1",
  "_where": "/Users/nex/Incubateur/winde_merge",
  "author": {
    "name": "Austin Montgomery",
    "email": "austin.munro.montgomery@gmail.com",
    "url": "https://github.com/Extrct"
  },
  "bugs": {
    "url": "https://github.com/Extrct/react-native-stars/issues"
  },
  "dependencies": {},
  "description": "a versatile react native star review component with half star compatibility and custom images, star sizes, star count, star spacing, and value display.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "a7c90c61aab3bbf22433cbb1a3a3f5b3a72fe557",
    "tarball": "https://registry.npmjs.org/react-native-stars/-/react-native-stars-1.0.1.tgz"
  },
  "gitHead": "85e09d61447696638af7c228f51c44708c4b481c",
  "homepage": "https://github.com/Extrct/react-native-stars#readme",
  "keywords": [
    "react-native",
    "react-native-component",
    "ios",
    "android",
    "star",
    "stars",
    "reviews",
    "star-review",
    "star-reviews"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "extrct",
      "email": "austin.munro.montgomery@gmail.com"
    }
  ],
  "name": "react-native-stars",
  "optionalDependencies": {},
  "readme": "# react-native-stars\n\n  \n[//]: # ([![NPM](https://nodei.co/npm/react-native-stars.png?downloads=true)](https://nodei.co/npm/react-native-stars/))\n  \n\n`react-native-stars` is a versatile react native star review component with half star compatibility and custom images, star sizes, star count, star spacing, and value display.\n\n![rn-stars](https://cloud.githubusercontent.com/assets/9997548/22914360/0f69f5d2-f23e-11e6-82a5-ce0a4986d611.gif)\n\n![rn-stars-android](https://cloud.githubusercontent.com/assets/9997548/22914409/551f6d46-f23e-11e6-9f7e-beda9e712929.gif)\n\n## Table of Contents\n\n1. [Installation](#installation)\n2. [Usage](#usage)\n3. [Basics](#basics)\n4. [Modes](#modes)\n5. [Props](#props)\n6. [Image Input](#image-input)\n7. [Contributing](#contributing)\n\n## Installation\n\n```sh\nnpm install react-native-stars --save\n```\n\n## Usage\n\n### Basics\n\n#### For Selection\n\n```js\n<View style={{alignItems:'center'}}>\n  <Stars\n        half={true}\n        rating={2.5}\n        update={(val)=>{this.setState({stars: val})}}\n        spacing={4}\n        starSize={40}\n        count={5}\n        fullStar={require('./images/starFilled.png')}\n        emptyStar={require('./images/starEmpty.png')}\n        halfStar={require('./images/starHalf.png')}/>\n</View>\n```\n\n#### For Display\n\n```js\n<View style={{alignItems:'center'}}>\n  <Stars\n    value={3.67}\n    spacing={8}\n    count={5}\n    starSize={40}\n    backingColor='cornsilk'\n    fullStar= {require('../../images/starFilled.png')}\n    emptyStar= {require('../../images/starEmpty.png')}/>\n</View>\n```\n\n### Modes  \n\n#### Selection Mode \n\nFor when you want to use the component as a user input. User selection calls the functioned passed to the `update` prop. This is the default mode. Use the `rating` prop to define a default star value on page load. Use `half` prop to allow for half star input granularity.\n\n#### Display Mode\n\nFor when you want to display an aggregate value. The rating will remain static unless updated through `value` prop. Passing any `value` data will activate this mode and will override the presence of any Selection Mode specific props. Display mode defaults to a straight bar proportion - overridden by `opacity` prop which maps star values to opacity as a percentage instead.\n\n### Props\n\n| Prop | Type | Description | Required | Default |\n|---|---|---|---|---|\n|**`fullStar`**|image| of the form `require('./path/to/image.png')`|Yes|NA|\n|**`emptyStar`**|image| see above |Yes|NA|\n|**`halfStar`**|image| see above |No|`null`|\n|**`count`**|int|the total number of stars|No|`5`|\n|**`starSize`**|int|width,height of individual star|No|`30`|\n|**`rating`**|0 <= `rating` <= `count`| (in Selection Mode) initial default rating, int x or x.5 only |No|`0`|\n|**`update`**|function| (in Selection Mode) function to be run on ratings selection ex: `update={(val)=> this.setState({stars: val})}` |No|`()=>{}`|\n|**`spacing`**|number| pixel amount of separation between each star|No|`0`|\n|**`value`**|0 <= `value` <= `count`| (passing any value sets to Display Mode) star value to be displayed eg. 3.6 (of 5), 7.8 (of 10) |No|`null`|\n|**`backingColor`**|bool| (in Display Mode) color behind the component (cannot be transparent)|No|`white`|\n|**`opacity`**|bool|(in Display Mode) displays star values as opacity percentages (0 - 1.0)|No|`false`|\n|**`half`**|bool|(in Selection Mode) allows for half star ratings|No|`false`|\n\n### Image Input\n\nprops `fullStar`, `emptyStar`, and `halfStar` expect image files with transparent backgrounds (.pngs), close to uniform dimensions, consistency between images (both fullStar.png and emptyStar.png are 100px/100px). Half star images are expected to be cropped as though they were full, with the center of the image intersecting the right edge of the half star object. If you're using Adobe Illustrator you can check the ['Use Artboards' box](https://cloud.githubusercontent.com/assets/9997548/22914446/87f94d72-f23e-11e6-9822-00be59ec2c1a.png) to ensure that empty space in the artboard is included during the export to .png. Half star images can, but don't need to have full outlines - both formats below are acceptible.\n\nexample compatible images:\n\n![stars](https://cloud.githubusercontent.com/assets/9997548/22914475/a6ff5dec-f23e-11e6-86b8-01e74eee6e90.jpg)\n\nI've included a set in example-images if you need something basic.\n\n## Contributing\n\nPull Requests for new features and bugfixes are welcome! :)\n\n## License\n\n[MIT License](http://opensource.org/licenses/mit-license.html)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Extrct/react-native-stars.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.1"
}
