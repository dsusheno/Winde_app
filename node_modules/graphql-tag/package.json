{
  "_args": [
    [
      {
        "raw": "graphql-tag@2.1.0",
        "scope": null,
        "escapedName": "graphql-tag",
        "name": "graphql-tag",
        "rawSpec": "2.1.0",
        "spec": "2.1.0",
        "type": "version"
      },
      "/Users/nex/Incubateur/winde_merge"
    ]
  ],
  "_from": "graphql-tag@2.1.0",
  "_id": "graphql-tag@2.1.0",
  "_inCache": true,
  "_location": "/graphql-tag",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/graphql-tag-2.1.0.tgz_1494955431029_0.7095197159796953"
  },
  "_npmUser": {
    "name": "jnwng",
    "email": "j@jnwng.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "graphql-tag@2.1.0",
    "scope": null,
    "escapedName": "graphql-tag",
    "name": "graphql-tag",
    "rawSpec": "2.1.0",
    "spec": "2.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/apollo-client",
    "/react-apollo"
  ],
  "_resolved": "https://registry.npmjs.org/graphql-tag/-/graphql-tag-2.1.0.tgz",
  "_shasum": "450b5049d2e1d8bc38f1c62b8225930a39aba770",
  "_shrinkwrap": null,
  "_spec": "graphql-tag@2.1.0",
  "_where": "/Users/nex/Incubateur/winde_merge",
  "author": "",
  "bugs": {
    "url": "https://github.com/apollostack/graphql-tag/issues"
  },
  "dependencies": {},
  "description": "A JavaScript template literal tag that parses GraphQL queries",
  "devDependencies": {
    "babel-preset-es2015": "^6.9.0",
    "babel-register": "^6.9.0",
    "chai": "^3.5.0",
    "graphql": "^0.9.1",
    "mocha": "^3.2.0",
    "rollup": "^0.41.5"
  },
  "directories": {},
  "dist": {
    "shasum": "450b5049d2e1d8bc38f1c62b8225930a39aba770",
    "tarball": "https://registry.npmjs.org/graphql-tag/-/graphql-tag-2.1.0.tgz"
  },
  "gitHead": "357f393bc15cce3897ff37b0b62b316b2ca5f00b",
  "homepage": "https://github.com/apollostack/graphql-tag#readme",
  "jsnext:main": "./src/index.js",
  "license": "MIT",
  "main": "./lib/graphql-tag.umd.js",
  "maintainers": [
    {
      "name": "dhaivatpandya",
      "email": "dhaivatpandya@gmail.com"
    },
    {
      "name": "helfer",
      "email": "helfer@meteor.com"
    },
    {
      "name": "jnwng",
      "email": "j@jnwng.com"
    },
    {
      "name": "mdg",
      "email": "npm@meteor.com"
    },
    {
      "name": "sashko",
      "email": "sashko@stubailo.com"
    },
    {
      "name": "tmeasday",
      "email": "tom@percolatestudio.com"
    }
  ],
  "module": "./src/index.js",
  "name": "graphql-tag",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.9.x"
  },
  "readme": "# graphql-tag\n[![npm version](https://badge.fury.io/js/graphql-tag.svg)](https://badge.fury.io/js/graphql-tag)\n[![Build Status](https://travis-ci.org/apollographql/graphql-tag.svg?branch=master)](https://travis-ci.org/apollographql/graphql-tag)\n[![Get on Slack](https://img.shields.io/badge/slack-join-orange.svg)](http://www.apollodata.com/#slack)\n\nGraphQL printing and parsing with bundled dependencies. Includes:\n\n- `gql` A JavaScript template literal tag that parses GraphQL query strings into the standard GraphQL AST.\n- `/loader` A webpack loader to preprocess queries\n\n### gql\n\nThis is a template literal tag you can use to concisely write a GraphQL query that is parsed into the standard GraphQL AST:\n\n```js\nimport gql from 'graphql-tag';\n\nconst query = gql`\n  {\n    user(id: 5) {\n      firstName\n      lastName\n    }\n  }\n`\n\n// query is now a GraphQL syntax tree object\nconsole.log(query);\n\n// {\n//   \"kind\": \"Document\",\n//   \"definitions\": [\n//     {\n//       \"kind\": \"OperationDefinition\",\n//       \"operation\": \"query\",\n//       \"name\": null,\n//       \"variableDefinitions\": null,\n//       \"directives\": [],\n//       \"selectionSet\": {\n//         \"kind\": \"SelectionSet\",\n//         \"selections\": [\n//           {\n//             \"kind\": \"Field\",\n//             \"alias\": null,\n//             \"name\": {\n//               \"kind\": \"Name\",\n//               \"value\": \"user\",\n//               ...\n```\n\nYou can easily explore GraphQL ASTs on [astexplorer.net](https://astexplorer.net/#/drYr8X1rnP/1).\n\nThis package is the way to pass queries into [Apollo Client](https://github.com/apollostack/apollo-client). If you're building a GraphQL client, you can use it too!\n\n#### Why use this?\n\nGraphQL strings are the right way to write queries in your code, because they can be statically analyzed using tools like [eslint-plugin-graphql](https://github.com/apollostack/eslint-plugin-graphql). However, strings are inconvenient to manipulate, if you are trying to do things like add extra fields, merge multiple queries together, or other interesting stuff.\n\nThat's where this package comes in - it lets you write your queries with [ES2015 template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) and compile them into an AST with the `gql` tag.\n\n#### Caching parse results\n\nThis package only has one feature - it caches previous parse results in a simple dictionary. This means that if you call the tag on the same query multiple times, it doesn't waste time parsing it again. It also means you can use `===` to compare queries to check if they are identical.\n\n### Webpack preprocessing\n\nThis package also includes a [webpack loader](https://webpack.github.io/docs/loaders.html). There are many benefits over this approach, which saves GraphQL ASTs processing time on client-side and enable queries to be separated from script over `.graphql` files.\n\n```js\nloaders: [\n  {\n    test: /\\.(graphql|gql)$/,\n    exclude: /node_modules/,\n    loader: 'graphql-tag/loader'\n  }\n]\n```\n\nthen:\n\n```js\nimport query from './query.graphql';\n\nconsole.log(query);\n// {\n//   \"kind\": \"Document\",\n// ...\n```\n\nTesting environments that don't support Webpack require additional configuration. For [Jest](https://facebook.github.io/jest/) use [jest-transform-graphql](https://github.com/remind101/jest-transform-graphql).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apollostack/graphql-tag.git"
  },
  "scripts": {
    "bundle": "rollup -c",
    "prepublish": "npm run bundle",
    "test": "mocha --require babel-register"
  },
  "version": "2.1.0"
}
